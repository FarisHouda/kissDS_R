read_csv(
"Nom, Prenom, Age, Enregistre_le
Marie, Dupond, 38, 18-03-2017,
Amira, Kharoub, 29, 05-02-2017",
col_names = c("name", "surname", "age", "subscription_date")
)
read_csv(
"Nom, Prenom, Age, Enregistre_le
Marie, Dupond, 38, 18-03-2017,
Amira, Kharoub, 29, 05-02-2017",
col_names = c("name", "surname", "age", "subscription_date")
)
?write_csv
?read_excel
library(tidyverse)
read_excel()
library(readxl)
?read_excel
library(openxlsx)
install.packages("openxlsx")
library(openxlsx)
read_csv("./data/utilisateur.csv") %>%
write.xlsx("./data/utilisateur.xlsx")
read_excel("./data/utilisateur.xlsx")
read_excel("./data/utilisateur.xlsx")
vignette("tidy-data")
sales <- read_csv("./data/sales_01.csv")
sales <- read_csv("./data/sales_01.csv")
sales
sales %>%
gather(annee, ventes, 2014:2016)
?gather
sales %>%
gather(key = annee, value = ventes, "2014":"2016")
sales %>%
gather(key = annee, value = ventes, "2014", "2015", "2016")
sales %>%
gather(key = annee, value = ventes, `2014`, `2015`, `2016`)
sales_tidy <- sales_per_year %>%
gather(key = annee, value = ventes, `2014`, `2015`, `2016`, convert=TRUE)
sales_per_year <- read_csv("./data/sales_01.csv")
sales
sales_tidy <- sales_per_year %>%
gather(key = annee, value = ventes, `2014`, `2015`, `2016`, convert=TRUE)
sales_tidy <- sales_per_year %>%
gather(key = annee, value = ventes, `2014`, `2015`, `2016`, convert=TRUE)
sales_tidy
?spread
sales_tidy %>%
spread(Canal, ventes)
sales_tidy %>%
spread(Pays, ventes)
sales_per_semestre <- read_csv("./data/sales_02.csv")
sales_per_semestre
sales_per_semestre_tidy <- sales_per_semestre %>%
gather(key = "semestre", value = "ventes", S1.2016, S2.2016)
sales_per_semestre_tidy
?separate
sales_per_semestre_tidy <- sales_per_semestre %>%
gather(key = "semestre", value = "ventes", S1.2016, S2.2016) %>%
separate(semestre, c("semestre", "annee"))
sales_per_semestre_tidy
sales_per_semestre <- read_csv("./data/sales_02.csv")
sales_per_semestre
sales_per_semestre_tidy <- sales_per_semestre %>%
gather(key = "semestre", value = "ventes", S1.2016, S2.2016)
sales_per_semestre_tidy
sales_per_semestre_tidy <- sales_per_semestre %>%
gather(key = "semestre", value = "ventes", S2.2015, S1.2016, S2.2016)
sales_per_semestre_tidy
sales_per_semestre_tidy <- sales_per_semestre %>%
gather(key = "semestre", value = "ventes", S1.2016, S2.2016) %>%
separate(semestre, c("semestre", "annee"))
sales_per_semestre_tidy
sales_volumes <- read_csv("./data/sales_volumes.csv")
sales_volumes
sales_volumes %>%
spread(Type_info, valeur)
sales_volumes <- read_csv("./data/sales_volumes.csv")
sales_volumes
sales_volumes %>%
spread(Type_info, valeur)
?complete
help(package = "tidyr")
iris %>% nest(-Species)
expand(mtcars, vs, cyl)
expand(mtcars, nesting(vs, cyl))
sales_per_semestre_tidy <- sales_per_semestre %>%
gather(key = "semestre", value = "ventes", S1.2016, S2.2016) %>%
separate(semestre, c("semestre", "annee"), sep=".")
sales_per_semestre_tidy
sales_per_semestre_tidy_1 <- sales_per_semestre %>%
gather(key = "semestre", value = "ventes", S1.2016, S2.2016) %>%
separate(semestre, c("semestre", "annee"), sep=".")
sales_per_semestre_tidy_1
sales_per_semestre_tidy_1 <- sales_per_semestre %>%
gather(key = "semestre", value = "ventes", S1.2016, S2.2016) %>%
separate(semestre, c("semestre", "annee"), sep="\\.")
sales_per_semestre_tidy_1
?unite
sales_per_semestre %>%
gather(key = "semestre", value = "ventes", S1.2016, S2.2016) %>%
separate(semestre, c("semestre", "annee")) %>%
unite(Canal, annee, semestre, sep="_")
sales_per_semestre_tidy <- sales_per_semestre %>%
gather(key = "semestre", value = "ventes", S2.2015, S1.2016, S2.2016) %>%
separate(semestre, c("semestre", "annee"))
sales_per_semestre_tidy
sales_per_semestre_tidy_1 <- sales_per_semestre %>%
gather(key = "semestre", value = "ventes", S2.2015, S1.2016, S2.2016) %>%
separate(semestre, c("semestre", "annee"), sep="\\.")
sales_per_semestre_tidy_1
sales_per_semestre %>%
gather(key = "semestre", value = "ventes", S2.2015, S1.2016, S2.2016) %>%
separate(semestre, c("semestre", "annee")) %>%
unite(Canal, annee, semestre, sep="_")
sales_per_semestre %>%
gather(key = "semestre", value = "ventes", S2.2015, S1.2016, S2.2016) %>%
separate(semestre, c("semestre", "annee")) %>%
unite(tag, Canal, annee, semestre, sep="_")
vignette("tibble")
install.packages(c("swirl", "swirlify"))
library(swirlify)
swirlify("my first lesson", "my new course")
demo_lesson()
set_lesson()
demo_lesson()
help(package="dplyr")
nasa
str(nasa)
nasa$mets$pressure
airquality
?airquality
help(package="datasets")
morley
Orange
sleep
sunspots
WWWusage
UKgas
Titanic
AirPassengers
LifeCycleSavings
JohnsonJohnson
islands
eurodist
euro
read_csv("./data/Video_Games_Sales_as_at_22_Dec_2016.csv")
knitr::opts_chunk$set(echo = TRUE)
sales_video_games <- read_csv("./data/Video_Games_Sales_as_at_22_Dec_2016.csv")
sales_video_games
sales_video_games <- read_csv("./data/vgsales.csv")
sales_video_games
vg_sales <- read_csv("./data/vgsales.csv")
vg_sale
vg_sales <- read_csv("./data/vgsales.csv")
vg_sales
vg_sales <- read_csv("./data/Video_Games_Sales_as_at_22_Dec_2016.csv")
vg_sales
vg_sales %>%
arrange(Platform, Genre, Year_of_Release, Name)
vg_sales %>%
arrange(Platform, Genre, desc(Year_of_Release), Name)
?read_csv
# specify colonnes types:
colonnes_types <- c(
Name = col_character(),
Platform = col_character(),
Year_of_Release = col_integer(),
Genre = col_character(),
Publisher = col_character(),
NA_Sales = col_double(),
EU_Sales = col_double(),
JP_Sales = col_double(),
Other_Sales = col_double(),
Global_Sales = col_double(),
Critic_Score = col_integer(),
Critic_Count = col_integer(),
User_Score = col_double(),
User_Count = col_integer(),
Developer = col_character(),
Rating = col_character() )
# read data with specified colonnes types
vg_sales <- read_csv("./data/Video_Games_Sales_as_at_22_Dec_2016.csv",
col_type = colonnes_types)
# show data
vg_sales
# specify colonnes types:
colonnes_types <- c(
Name = col_character(),
Platform = col_character(),
Year_of_Release = col_integer(),
Genre = col_character(),
Publisher = col_character(),
NA_Sales = col_double(),
EU_Sales = col_double(),
JP_Sales = col_double(),
Other_Sales = col_double(),
Global_Sales = col_double(),
Critic_Score = col_integer(),
Critic_Count = col_integer(),
User_Score = col_double(),
User_Count = col_integer(),
Developer = col_character(),
Rating = col_character() )
# read data with specified colonnes types
vg_sales <- read_csv("./data/Video_Games_Sales_as_at_22_Dec_2016.csv",
col_type = colonnes_types)
# show data
colonnes_types
vignette("column-types")
# specify colonnes types:
colonnes_types <- cols(
Name = col_character(),
Platform = col_character(),
Year_of_Release = col_integer(),
Genre = col_character(),
Publisher = col_character(),
NA_Sales = col_double(),
EU_Sales = col_double(),
JP_Sales = col_double(),
Other_Sales = col_double(),
Global_Sales = col_double(),
Critic_Score = col_integer(),
Critic_Count = col_integer(),
User_Score = col_double(),
User_Count = col_integer(),
Developer = col_character(),
Rating = col_character() )
# read data with specified colonnes types
vg_sales <- read_csv("./data/Video_Games_Sales_as_at_22_Dec_2016.csv",
col_type = colonnes_types)
# show data
colonnes_types
# specify colonnes types:
colonnes_types <- cols(
Name = col_character(),
Platform = col_character(),
Year_of_Release = col_integer(),
Genre = col_character(),
Publisher = col_character(),
NA_Sales = col_double(),
EU_Sales = col_double(),
JP_Sales = col_double(),
Other_Sales = col_double(),
Global_Sales = col_double(),
Critic_Score = col_integer(),
Critic_Count = col_integer(),
User_Score = col_double(),
User_Count = col_integer(),
Developer = col_character(),
Rating = col_character() )
# read data with specified colonnes types
vg_sales <- read_csv("./data/Video_Games_Sales_as_at_22_Dec_2016.csv",
col_type = colonnes_types)
# show data
vg_sales
vg_sales %>%
arrange(Platform, Genre, desc(Year_of_Release), Name)
vg_sales %>%
arrange(desc(Year_of_Release), Platform, Genre, Name)
?desc
vg_sales %>%
filter(Year_of_Release >= 2005,
Year_of_Release <= 2015,
Genre == "Adventure",
NA_Sales >= 0.1)
vg_sales %>%
filter(Year_of_Release >= 2005,
Year_of_Release <= 2015,
Platform == "PS3"
Genre == "Adventure",
vg_sales %>%
filter(Year_of_Release >= 2005,
Year_of_Release <= 2015,
Platform == "PS3",
Genre == "Adventure",
NA_Sales >= 0.1)
vg_sales %>%
filter(Year_of_Release >= 2005,
Year_of_Release <= 2015,
Platform %in% c("PS3", "PS4"),
Genre == "Adventure",
NA_Sales >= 0.1)
iris %>% sample_n(10)
iris %>% sample_frac(0.1)
iris %>% slice(5:10)
iris %>% slice(5:10)
iris %>% top_n(2, Petal.Width)
iris %>% top_n(3, Petal.Width)
iris %>% top_n(5, Petal.Width)
browseVignettes(package = c("dplyr", "tidyr"))
vg_sales %>%
select(Platform, Genre)
vg_sales %>%
select(Platform, Genre) %>%
distinct()
vg_sales %>%
select(Platform, Genre)
vg_sales %>%
select(Platform, Genre) %>%
distinct() %>%
arrange(Platform, Genre)
names(iris)
iris %>% select(contains("Sepal"))
iris %>% select(contains("Sepal"), Species)
iris %>% select(Species, contains("Sepal"))
iris %>% select(Species, ends_with("Length"))
iris %>% select(Species, num_range(1:3))
iris %>% select(one_off(c("Species", "Genus")))
iris %>% select(one_of(c("Species", "Genus")))
iris %>% select(one_of(c("Species")))
iris %>% select(one_of(c("Species", "test")))
?one_of
iris %>% select(one_of(c("Species", "Sepal.Width")))
ris %>% select(Species, starts_with("Sepal"))
iris %>% select(Species, starts_with("Sepal"))
iris %>% select(Sepal.Length:Petal.Width)
?mutate
10**2
vg_sales %>%
select(Names, NA_Sales) %>%
mutate(NA_Sales_$ = NA_Sales * 10**6)
vg_sales %>%
select(Names, NA_Sales) %>%
mutate(NA_Sales_dlr = NA_Sales * 10**6)
vg_sales %>%
select(Name, NA_Sales) %>%
mutate(NA_Sales_dlr = NA_Sales * 10**6)
vg_sales %>%
select(Name, NA_Sales) %>%
transmute(NA_Sales_dlr = NA_Sales * 10**6)
?transmute
vg_sales %>%
select(Name, NA_Sales) %>%
mutate(NA_Sales_dlr = NA_Sales * 10**6,
NA_Sales = NULL)
vg_sales %>%
select(Name, NA_Sales, EU_Sales, Global_Sales) %>%
mutate(NA_Sales_ratio = NA_Sales / Global_Sales,
EU_Sales_ratio = EU_Sales / Global_Sales,
Wester_Sales_ratio = NA_Sales_ratio + EU_Sales_ratio)
vg_sales %>%
select(Name, NA_Sales, EU_Sales, Global_Sales) %>%
mutate(NA_Sales_ratio = NA_Sales / Global_Sales,
EU_Sales_ratio = EU_Sales / Global_Sales,
Wester_Sales_ratio = NA_Sales_ratio + EU_Sales_ratio,
NA_Sales = NULL,
EU_Sales = NULL)
?mutate_each
vg_sales %>%
select(ends_with("Sales")) %>%
mutate_each(funs(dlr = . * 10**6))
vg_sales %>%
mutate_each(funs(dlr = . * 10**6), ends_with("Sales"))
unique(vg_sales$Genre)
vg_sales %>%
group_by(Genre)
?group_by
vg_sales %>%
group_by(Genre) %>%
groups
vg_sales %>%
group_by(Genre)
vg_sales %>%
group_by(Genre) %>%
groups
vg_sales %>%
summarise(avg_sales = mean(Global_Sales))
vg_sales %>%
group_by(Genre) %>%
summarise(avg_sales = mean(Global_Sales))
vg_sales %>%
group_by(Genre) %>%
summarise(avg_sales = mean(Global_Sales),
nb_games = n(Name))
vg_sales %>%
group_by(Genre) %>%
summarise(avg_sales = mean(Global_Sales),
nb_games = n())
vg_sales %>%
group_by(Genre) %>%
summarise(avg_sales = mean(Global_Sales),
med_sales = median(Global_Sales),
min_sales = min(Global_Sales),
max_sales = max(Global_Sales),
nb_games = n())
unique(vg_sales$Publisher)
unique(vg_sales$Platform)
help(package = "dplyr")
knitr::opts_chunk$set(echo = TRUE)
products <- read_csv("./data/babikea_products.csv")
products
products <- read_csv("./data/babikea_products.csv")
products
sales <- read_csv("./data/babikea_product_sales.csv")
sales
products <- read_csv("./data/babikea_products.csv")
products
products <- read_csv("./data/babikea_products.csv")
products
inner_join(products, sales, by="product")
products <- read_csv("./data/babikea_products.csv")
products
inner_join(products, sales, by="product")
inner_join(products, sales, by="product") %>%
mutate(revenues = price * quantity) %>%
summarise(total_revenues = sum(revenues))
sales <- read_csv("./data/babikea_product_sales.csv")
sales
inner_join(products, sales, by="product")
inner_join(products, sales, by="product") %>%
mutate(revenues = price * quantity) %>%
summarise(total_revenues = sum(revenues))
inner_join(products, sales, by="product") %>%
mutate(revenues = price * quantity) %>%
group_by(type) %>%
summarise(total_revenues = sum(revenues))
inner_join(products, sales, by="product") %>%
mutate(revenues = price * quantity) %>%
group_by(produit) %>%
summarise(total_revenues = sum(revenues))
inner_join(products, sales, by="product") %>%
mutate(revenues = price * quantity) %>%
group_by(product) %>%
summarise(total_revenues = sum(revenues))
inner_join(products, sales, by="product")
sales <- read_csv("./data/babikea_product_sales.csv")
sales
products <- read_csv("./data/babikea_products.csv")
products
calalog_sales <- inner_join(products, sales, by="product") %>%
mutate(revenues = price * quantity) %>%
group_by(product) %>%
summarise(total_revenues = sum(revenues))
catalog_sales
catalog_sales <- inner_join(products, sales, by="product") %>%
mutate(revenues = price * quantity) %>%
group_by(product) %>%
summarise(total_revenues = sum(revenues))
catalog_sales
?left_join
products %>%
inner_join(sales, by="product")
products %>%
inner_join(sales, by="product") %>%
mutate(revenues = price * quantity) %>%
summarise(total_revenues = sum(revenues))
products %>%
inner_join(sales, by="product") %>%
mutate(revenues = price * quantity) %>%
group_by(type) %>%
summarise(total_revenues = sum(revenues))
products %>%
left_join(catalog_sales, by="product")
products %>%
left_join(catalog_sales, by="product") %>%
mutate(total_revenues = ifelse(is.na(total_revenues), 0, total_revenues))
products %>%
outer_join(sales, by="product")
products %>%
full_join(sales, by="product")
?sum
products %>%
full_join(sales, by="product") %>%
group_by(product) %>%
summarise(res = sum(quantity, na.rm = T))
products %>%
full_join(sales, by="product")
products %>%
full_join(sales, by="product") %>%
group_by(product) %>%
summarise(volumes = sum(quantity, na.rm = T))
?semi_join
volumes %>%
semi_join(products, by="product")
volumes <- products %>%
full_join(sales, by="product") %>%
group_by(product) %>%
summarise(volumes = sum(quantity, na.rm = T))
volumes
volumes %>%
semi_join(products, by="product")
volumes %>%
anti_join(products, by="product")
catalog_volumes <- volumes %>%
semi_join(products, by="product")
catalog_volumes
horscatalog_volumes <- volumes %>%
anti_join(products, by="product")
horscatalog_volumes
sold_volumes <- products %>%
full_join(sales, by="product") %>%
group_by(product) %>%
summarise(volumes = sum(quantity, na.rm = T)) %>%
semi_join(sales, by = "product")
sold_volumes
sold_volumes %>%
intersect(catalog_volumes)
sold_volumes %>%
union(catalog_volumes)
sold_volumes %>%
union(catalog_volumes)
sold_volumes %>%
setdiff(catalog_volumes)
?setdiff
catalog_sales <- products %>%
inner_join(sales, by="product") %>%
mutate(revenues = price * quantity) %>%
group_by(product) %>%
summarise(total_revenues = sum(revenues))
catalog_sales
